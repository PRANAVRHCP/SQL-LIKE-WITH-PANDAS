{"properties":{},"description":"Sql Like Operations","processes":{"python3operator11111":{"component":"com.sap.system.python3Operator","metadata":{"label":"SQL Operations","x":392.99999713897705,"y":80,"height":80,"width":120,"extensible":true,"config":{"script":"import  pandas as pd\r\nimport datetime\r\nfrom io import StringIO\r\nfrom hdfs import InsecureClient , HdfsError\r\nclient = InsecureClient('http://datalake:50070')\r\ndf_delta = ''\r\nlock = 'Y'\r\n\r\ndef read_delta(data):\r\n    global df_delta\r\n    global lock\r\n    data = StringIO(data)\r\n    df_delta = pd.read_csv(data, sep=\",\")\r\n    lock = 'N'\r\n    \r\ndef read_file(data):\r\n    \r\n    attr = dict()\r\n    global df_delta\r\n    global lock\r\n    #convert String data input to a CSV Readable format\r\n    data = StringIO(data)\r\n    df_data = pd.read_csv(data, sep=\",\")\r\n    while lock != 'N':\r\n        print('Waiting to read the delta data ')\r\n    \r\n    df_data.fillna('' , inplace = True)\r\n    lt_keys = ['CARRID' , 'CONNID' , 'FLDATE' , 'MANDT']\r\n    df_delta.fillna('' , inplace = True)\r\n    \r\n    api.send(\"out2\",'Before Update')\r\n    api.send(\"out2\", str(df_data))\r\n   \r\n    Rec_update = df_delta['IUUC_OPERATION'] == 'U'\r\n    Rec_delete = df_delta['IUUC_OPERATION'] == 'D'\r\n    \r\n    # Create  Dataframe for deletion and update\r\n    df_comb = df_delta[ Rec_delete | Rec_update]\r\n    \r\n    api.send(\"out2\",'After Update')\r\n    \r\n    if (len(df_comb.index) > 0 ) : \r\n        df_data = pd.concat([df_data,df_comb]).drop_duplicates(lt_keys,keep='last') \r\n        df_data.set_index(lt_keys, inplace=True)               \r\n        #Delete all delete entries\r\n        is_delete_index = df_data[df_data['IUUC_OPERATION'] == 'D'].index\r\n        df_data.drop(is_delete_index,inplace=True)  \r\n\r\n    sdl_path = '/shared/SLT/SFLIGHT/'\r\n    sdl_fname = sdl_path + '/data_deltamerge.csv'\r\n    fname =  '/tmp/data_deltamerge.csv'\r\n    df_data .to_csv(fname, sep = ',' , encoding='utf-8', index=False , header = True)\r\n    client.delete(sdl_fname)\r\n    try:\r\n        client.upload(sdl_path, fname)\r\n        res_out = 'File uploaded to SDL with file name' + fname\r\n        api.send(\"out2\",res_out ) \r\n    except HdfsError as er :\r\n         api.send(\"out2\", 'Error in uploading file to SDL')    \r\n    \r\n    api.send(\"out2\", str(df_data))\r\n    \r\napi.set_port_callback(\"input\", read_file)\r\napi.set_port_callback(\"in2\",  read_delta)","chunksize":"10428800"},"additionalinports":[{"name":"input","type":"string"},{"name":"in2","type":"string"}],"additionaloutports":[{"name":"out2","type":"string"}]},"name":"python3operator1111"},"terminal1":{"component":"com.sap.util.terminal","metadata":{"label":"Terminal","x":597.9999961853027,"y":72,"height":80,"width":120,"ui":"dynpath","config":{"layout":"[%d] %m%n","maxSize":10240000}}},"readfile1":{"component":"com.sap.file.read","metadata":{"label":"Read File","x":17,"y":12,"height":80,"width":120,"config":{"mode":"Once","connection":{"configurationType":"Connection Management","connectionID":"DI_DATA_LAKE"},"path":"/shared/SLT/SFLIGHT/data_deltamerge.csv"}}},"tostringconverter1":{"component":"com.sap.util.toStringConverter","metadata":{"label":"ToString Converter","x":201.99999904632568,"y":42,"height":50,"width":50,"config":{}}},"readfile11":{"component":"com.sap.file.read","metadata":{"label":"Read File","x":17,"y":132,"height":80,"width":120,"config":{"mode":"Once","connection":{"configurationType":"Connection Management","connectionID":"DI_DATA_LAKE"},"path":"/shared/SLT/SFLIGHT/Delta/delta.csv"}},"name":"readfile1"},"tostringconverter11":{"component":"com.sap.util.toStringConverter","metadata":{"label":"ToString Converter","x":201.99999904632568,"y":132,"height":50,"width":50,"config":{}},"name":"tostringconverter1"}},"groups":[{"name":"group1","nodes":["python3operator11111"],"metadata":{"description":"Group"},"tags":{"hdfs":"2.5.0","pandas":"0.24.2"}}],"connections":[{"metadata":{"points":"516.999997138977,120 564.9999966621399,120 564.9999966621399,112 592.9999961853027,112"},"src":{"port":"out2","process":"python3operator11111"},"tgt":{"port":"in1","process":"terminal1"}},{"metadata":{"points":"141,43 168.99999952316284,43 168.99999952316284,58 196.99999904632568,58"},"src":{"port":"file","process":"readfile1"},"tgt":{"port":"ininterface","process":"tostringconverter1"}},{"metadata":{"points":"255.99999904632568,67 283.9999985694885,67 283.9999985694885,114.5 359.9999976158142,114.5 359.9999976158142,111 387.99999713897705,111"},"src":{"port":"outstring","process":"tostringconverter1"},"tgt":{"port":"input","process":"python3operator11111"}},{"metadata":{"points":"141,163 168.99999952316284,163 168.99999952316284,148 196.99999904632568,148"},"src":{"port":"file","process":"readfile11"},"tgt":{"port":"ininterface","process":"tostringconverter11"}},{"metadata":{"points":"255.99999904632568,157 283.9999985694885,157 283.9999985694885,125.5 359.9999976158142,125.5 359.9999976158142,129 387.99999713897705,129"},"src":{"port":"outstring","process":"tostringconverter11"},"tgt":{"port":"in2","process":"python3operator11111"}}],"inports":{},"outports":{}}